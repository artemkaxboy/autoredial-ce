#
# Copyright 2018 Google LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Project-wide Gradle settings.

# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.

# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html

# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
org.gradle.jvmargs=-Xmx1536m

# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
# org.gradle.parallel=true

android.databinding.enableV2=true

#
# SET YOUR ANDROID APPLICATION PACKAGE NAME HERE
#
# Optionally, you can also set the application package name with a Gradle command.
#
# Example debug build using package name 'com.example.subscriptions.different.package':
#     ./gradlew -PandroidApplicationId=com.example.subscriptions.different.package assembleDebug
#
# NOTE: Usually, Google Play Billing APIs are restricted to release APKs
# that are installed by Google Play. For development, Google Play Billing allows the APIs
# to work as long as the Android package name matches the package name of the APK that you
# have deployed to the Google Play Store.
# During development, you should set the package name to match the APK you have on Google Play.
#
# Release builds will only work if they the APK is installed through Google Play.
# For fast testing, you can deploy APKs in the Internal Test track.
# https://support.google.com/googleplay/android-developer/answer/3131213
#
# Default: com.example.subscriptions.classytaxi
#
androidApplicationId=com.artemkaxboy.android.autoredialce

# You can specify the keystore properties file from the command line.
# Example release build using release keystore 'release-keystore.properties':
#     ./gradlew -PkeystorePropertiesFilename=release-keystore.properties assembleRelease
#
# Default source: keystore.properties
#
keystorePropertiesFilename=keystore.properties

# You can specify the version information from the command line.
# Example: Debug build with version name 1.0.1 and version code 2.
#     ./gradlew -PandroidMobileVersionName=1.0.1 -PandroidMobileVersionCode=2 assembleDebug
#
androidMobileVersionCode=3
androidMobileVersionName=0.1.2
android.useAndroidX=true
android.enableJetifier=true
