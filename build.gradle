/*
 * Copyright 2018 Google LLC. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

// Edit package name in gradle.properties
println "Using configuration from gradle.properties"
println "Using package name: $androidApplicationId"
println "Using keystore properties: $keystorePropertiesFilename"

ext {
    // Keystore information is loaded from a file.
    keystorePropertiesFile = rootProject.file(keystorePropertiesFilename)
    keystoreProperties = new Properties()
    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    } else {
        println "Cannot find keystore properties file. " +
                "A) Create this file, B) use a different file, or C) use assembleDebug."
        println "A) Create $keystorePropertiesFilename"
        println "B) ./gradlew -PkeystorePropertiesFilename=release-keystore.properties assembleRelease"
        println "C) ./gradlew assembleDebug"
        println ""
    }
    keystoreFilename = keystoreProperties['storeFile']
    keystoreStoreFile = keystoreFilename == null ? null : rootProject.file(keystoreFilename)
    // Signing config values.
    keystoreStorePassword = keystoreProperties['storePassword']
    keystoreKeyAlias = keystoreProperties['keyAlias']
    keystoreKeyPassword = keystoreProperties['keyPassword']

    // Android version information.
    androidMinimumSdkVersion = 16
    androidTargetSdkVersion = 28
    androidCompileSdkVersion = 28
    androidBuildToolsVersion = '28.0.3'
}

buildscript {
    // Library versions.
    ext.billingVersion = '1.2'
    ext.gsonVersion = '2.8.2'
    ext.jsonVersion = '20140107'
    ext.gmsVersion = '4.2.0'

    // Tools versions.
    ext.gradleGoogleVersion = '3.2.0'
    ext.gradleToolsVersion = '3.4.1'
    ext.kotlinVersion = '1.3.41'

    // Testing versions.
    ext.jUnitVersion = '4.12'

    repositories {
        google()
        jcenter()
        maven {
            url 'https://maven.fabric.io/public'
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${gradleToolsVersion}"
        classpath "com.google.gms:google-services:${gradleGoogleVersion}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "com.google.gms:google-services:${gmsVersion}"

        // https://firebase.google.com/docs/crashlytics/get-started?authuser=0&platform=android#android
        classpath 'io.fabric.tools:gradle:1.29.0'  // Crashlytics plugin

        // https://firebase.google.com/docs/perf-mon/get-started-android?authuser=0
        classpath 'com.google.firebase:perf-plugin:1.2.1'  // Performance Monitoring plugin

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}